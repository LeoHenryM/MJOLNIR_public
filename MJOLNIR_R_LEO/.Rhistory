str_remove("Resp"),
p2V_Rs=str_extract(p2, "Resp[A-z]{1,}") %>%
str_remove("Resp")) %>%
filter(is.na(p1V_Name)|is.na(p1V_Up)|is.na(p1V_Rs)|p1V_Up==p2V_Up|p1V_Name==p2V_Name|p1V_Rs==p2V_Rs) %>%
select(-p1, -p2, -p1V_Name, -p2V_Name, -p1V_Up, -p2V_Up, -name, -p1V_Rs, -p2V_Rs)
dff.means.comp %>% xtable::xtable()
mixed.lmers <- list(
"EXPGRP&Spill&UpdProd" = lmer(MorallyWrong ~ EXPGRP_TEXT + ScaledCatchCovid*ScaledTransmitCovid + V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"EXPGRPSpillRace&Upd" = lmer(MorallyWrong ~ EXPGRP_TEXT*ScaledTransmitCovid*ScaledCatchCovid*V_Racenamef + V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"EXPGRPSpillRace&UpdProd" = lmer(MorallyWrong ~  EXPGRP_TEXT*ScaledTransmitCovid*ScaledCatchCovid*V_Racenamef + V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"EXPGRPSpillRaceUpdProd" = lmer(MorallyWrong ~  EXPGRP_TEXT*ScaledTransmitCovid*ScaledCatchCovid*V_Racenamef*V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)))
modelsummary(mixed.lmers, fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Model 3")
mixed.lmers <- list(
"EXPGRP&Spill&UpdProd" = lmer(MorallyWrong ~ EXPGRP_TEXT + ScaledCatchCovid*ScaledTransmitCovid + V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"EXPGRPSpillRace&Upd" = lmer(MorallyWrong ~ EXPGRP_TEXT*ScaledTransmitCovid*ScaledCatchCovid*V_Racenamef + V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"EXPGRPSpillRace&UpdProd" = lmer(MorallyWrong ~  EXPGRP_TEXT*ScaledTransmitCovid*ScaledCatchCovid*V_Racenamef + V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)),
"Spill&EXPGRPRaceUpdProd" = lmer(MorallyWrong ~  ScaledTransmitCovid*ScaledCatchCovid+EXPGRP_TEXT*V_Racenamef*V_Product*V_presentation3 + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0)))
modelsummary(mixed.lmers, fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Model 3")
dff.means <- difflmeansmodelcomp(mixed.lmers[3,4])
dff.means <- difflmeansmodelcomp(mixed.lmers[c(3,4)])
rownames(dff.means) <-str_replace_all(rownames(dff.means), "V_presentation3", "Up")
rownames(dff.means) <-str_replace_all(rownames(dff.means), "V_Racenamef", "Name")
rownames(dff.means) <-str_replace_all(rownames(dff.means), "EXPGRP_TEXT", "Resp")
arrangeorder <-  c("NmeWhite:CHANGEFORPRODUCT:Defensive - NmeChinese:CHANGEFORPRODUCT:Defensive",
"NmeWhite:CHANGEFORPRODUCT:Prosocial - NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspWhite:CHANGEFORPRODUCT:NONE - RspChinese:CHANGEFORPRODUCT:NONE",
"RspWhite:CHANGEFORPRODUCT:Defensive - RspChinese:CHANGEFORPRODUCT:Defensive",
"RspWhite:CHANGEFORPRODUCT:Prosocial - RspChinese:CHANGEFORPRODUCT:Prosocial",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:NONE - RspChinese:NmeChinese:CHANGEFORPRODUCT:NONE",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Defensive - RspChinese:NmeChinese:CHANGEFORPRODUCT:Defensive",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Prosocial - RspChinese:NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:NONE - RspWhite:NmeChinese:CHANGEFORPRODUCT:NONE",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:Defensive - RspWhite:NmeChinese:CHANGEFORPRODUCT:Defensive",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:Prosocial - RspWhite:NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:NONE - RspChinese:NmeChinese:CHANGEFORPRODUCT:NONE",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:Defensive - RspChinese:NmeChinese:CHANGEFORPRODUCT:Defensive",
"RspChinese:NmeWhite:CHANGEFORPRODUCT:Prosocial - RspChinese:NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:NONE - RspWhite:NmeChinese:CHANGEFORPRODUCT:NONE",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Defensive - RspWhite:NmeChinese:CHANGEFORPRODUCT:Defensive",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Prosocial - RspWhite:NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspWhite:NmeChinese:CHANGEFORPRODUCT:NONE - RspChinese:NmeChinese:CHANGEFORPRODUCT:NONE",
"RspWhite:NmeChinese:CHANGEFORPRODUCT:Defensive - RspChinese:NmeChinese:CHANGEFORPRODUCT:Defensive",
"RspWhite:NmeChinese:CHANGEFORPRODUCT:Prosocial - RspChinese:NmeChinese:CHANGEFORPRODUCT:Prosocial",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:NONE - RspChinese:NmeWhite:CHANGEFORPRODUCT:NONE",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Defensive - RspChinese:NmeWhite:CHANGEFORPRODUCT:Defensive",
"RspWhite:NmeWhite:CHANGEFORPRODUCT:Prosocial - RspChinese:NmeWhite:CHANGEFORPRODUCT:Prosocial")
dff.means.comp <- dff.means %>%
mutate(name=rownames(.),
p1=str_extract(name, "[A-z0-9:]{1,} "),
p2=str_extract(name, " [A-z0-9:]{1,}"),
p1V_PP=str_extract(p1, "V_Product[A-z]{1,}:V_presentation3[A-z]{1,}"),
p2V_PP=str_extract(p2, "V_Product[A-z]{1,}:V_presentation3[A-z]{1,}")) %>%
filter(!is.na(p1V_PP) & p1V_PP==p2V_PP)
f_LATEX_MEANS_RACE_COMPARISON_PER_WHICHPRODUCT <-  function(c_WHICHPRODUCT){
dff.means.comp %>%
filter(!str_detect(name, "Indian|Black"), str_detect(name,c_WHICHPRODUCT)) %>%
mutate(name = name %>%
str_replace_all("EXPGRP_TEXT", "Rsp") %>%
str_replace_all("V_Racenamef", "Nme") %>%
str_remove_all("V_Product") %>%
str_remove_all("V_presentation3")) %>%
arrange(match(name,
arrangeorder %>%
str_replace_all("CHANGEFORPRODUCT",
c_WHICHPRODUCT))) %>%
rownames_to_column(var = "k") %>%
mutate(comp1 = str_extract(name, "[A-z0-9:]{1,} "),
comp2 = str_extract(name, " [A-z0-9:]{1,}")) %>%
select(comp1, comp2, MorallyWrong, CatchCovid, TransmitCovid) %>%
xtable::xtable(caption = paste("Mean comparison of Model 9, for ", c_WHICHPRODUCT, " and White and Chinese name")) %>%
print(include.rownames=FALSE)
return()
}
map(dff_q$V_Product %>% levels(), f_LATEX_MEANS_RACE_COMPARISON_PER_WHICHPRODUCT)
c_WHICHPRODUCT <- "cigarettes"
dff.means.comp %>%
filter(!str_detect(name, "Indian|Black"), str_detect(name,c_WHICHPRODUCT))
dff.means.comp
dff.means
dff.means <- difflmeansmodelcomp(mixed.lmers[c(4)])
dff.means.comp <- dff.means %>%
mutate(name=rownames(.),
p1=str_extract(name, "[A-z0-9:]{1,} "),
p2=str_extract(name, " [A-z0-9:]{1,}"),
p1V_PP=str_extract(p1, "V_Product[A-z]{1,}:V_presentation3[A-z]{1,}"),
p2V_PP=str_extract(p2, "V_Product[A-z]{1,}:V_presentation3[A-z]{1,}")) %>%
filter(!is.na(p1V_PP) & p1V_PP==p2V_PP)
dff.means.comp
f_LATEX_MEANS_RACE_COMPARISON_PER_WHICHPRODUCT <-  function(c_WHICHPRODUCT){
dff.means.comp %>%
filter(!str_detect(name, "Indian|Black"), str_detect(name,c_WHICHPRODUCT)) %>%
mutate(name = name %>%
str_replace_all("EXPGRP_TEXT", "Rsp") %>%
str_replace_all("V_Racenamef", "Nme") %>%
str_remove_all("V_Product") %>%
str_remove_all("V_presentation3")) %>%
arrange(match(name,
arrangeorder %>%
str_replace_all("CHANGEFORPRODUCT",
c_WHICHPRODUCT))) %>%
rownames_to_column(var = "k") %>%
mutate(comp1 = str_extract(name, "[A-z0-9:]{1,} "),
comp2 = str_extract(name, " [A-z0-9:]{1,}")) %>%
select(comp1, comp2, MorallyWrong, CatchCovid, TransmitCovid) %>%
xtable::xtable(caption = paste("Mean comparison of Model 9, for ", c_WHICHPRODUCT, " and White and Chinese name")) %>%
print(include.rownames=FALSE)
return()
}
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_wrap(~Question, nrow=3)
grph
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_wrap(~Question, nrow=1)
grph
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_wrap(~ V_Product) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_wrap(EXPGRP_TEXT~ V_Product) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~ V_Product) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~ V_Product) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~ V_Product) +
geom_point() +
geom_smooth(method='lm')
mixed.lmers <- list(
"MorallyWrong" = lmer(MorallyWrong ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Storetype + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Storetype + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Storetype + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)))
mixed.lmers <- list(
"MorallyWrong" = lmer(MorallyWrong ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_StoreType + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"MorallyWrong" = lmer(MorallyWrong ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_StoreType + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Number + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Age + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Location + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_StoreType + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ V_Framing + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)))
modelsummary(mixed.lmers, fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Model 1, Product without update")
dff_q$V_Framing %>% levels()
dff_q$V_Framing %>% as.factyor() %>% levels()
dff_q$V_Framing %>% as.factor() %>% levels()
mixed.lmers.self <- list(
"MorallyWrong" = lmer(MorallyWrong ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)))
modelsummary(c(mixed.lmers, mixed.lmers.self), fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Race crossed with product")
mixed.lmers <- list(
"MorallyWrong" = lmer(MorallyWrong ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"CatchCovid" = lmer(CatchCovid ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)),
"TransmitCovid" = lmer(TransmitCovid ~ EXPGRP_TEXT*V_Product + (1|ID),
data = dff_q %>%
filter(V_JudgeSelf==0, V_up==0)))
modelsummary(c(mixed.lmers, mixed.lmers.self), fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Race crossed with product")
modelsummary(c(mixed.lmers), fmt=2, estimate = c("{estimate}{stars}"), statistic = c(),
output = "latex", title = "Race crossed with product")
comp <- c(mixed.lmers)
dff.means <- difflmeansmodelcomp(comp)
rownames(dff.means) <-str_remove_all(rownames(dff.means), "V_Product|EXPGRP_TEXT")
xtable::xtable(dff.means)
comp <- c(mixed.lmers)
dff.means <- difflmeansmodelcomp(comp)
xtable::xtable(dff.means)
dff.means <- difflmeansmodelcomp(comp)
dff.means.comp <- dff.means %>%
mutate(name=rownames(.),
p1=str_extract(name, "[A-z0-9:]{1,} "),
p2=str_extract(name, " [A-z0-9:]{1,}"),
p1V_Name=str_extract(p1, "EXPGRP_TEXT[A-z]{1,}") %>%
str_remove("EXPGRP_TEXT"),
p2V_Name=str_extract(p2, "EXPGRP_TEXT[A-z]{1,}") %>%
str_remove("EXPGRP_TEXT"),
p1V_Up=str_extract(p1, "V_Product[A-z]{1,}") %>%
str_remove("V_Product"),
p2V_Up=str_extract(p2, "V_Product[A-z]{1,}") %>%
str_remove("V_Product")) %>%
filter(is.na(p1V_Name)|is.na(p1V_Up)|p1V_Up==p2V_Up|p1V_Name==p2V_Name) %>%
select(-p1, -p2, -p1V_Name, -p2V_Name, -p1V_Up, -p2V_Up, -name)
rownames(dff.means.comp) <-str_remove_all(rownames(dff.means.comp), "V_Product|EXPGRP_TEXT")
xtable::xtable(dff.means)
dff.means.comp %>% xtable::xtable()
dff.means.comp <- dff.means %>%
mutate(name=rownames(.),
p1=str_extract(name, "[A-z0-9:]{1,} "),
p2=str_extract(name, " [A-z0-9:]{1,}"),
p1V_Name=str_extract(p1, "EXPGRP_TEXT[A-z]{1,}") %>%
str_remove("EXPGRP_TEXT"),
p2V_Name=str_extract(p2, "EXPGRP_TEXT[A-z]{1,}") %>%
str_remove("EXPGRP_TEXT"),
p1V_Up=str_extract(p1, "V_Product[A-z]{1,}") %>%
str_remove("V_Product"),
p2V_Up=str_extract(p2, "V_Product[A-z]{1,}") %>%
str_remove("V_Product")) %>%
filter(is.na(p1V_Name)|is.na(p1V_Up)|p1V_Up==p2V_Up&p1V_Name!=p2V_Name) %>%
select(-p1, -p2, -p1V_Name, -p2V_Name, -p1V_Up, -p2V_Up, -name)
rownames(dff.means.comp) <-str_remove_all(rownames(dff.means.comp), "V_Product|EXPGRP_TEXT")
dff.means.comp %>% xtable::xtable()
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_wrap(EXPGRP_TEXT~Question, nrow=1)
grph
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_wrap(EXPGRP_TEXT~Question)
grph
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_grid(EXPGRP_TEXT~Question)
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_grid(EXPGRP_TEXT~Question)
grph
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_grid(Question~EXPGRP_TEXT)
grph
grph <- dff_q %>%
filter(V_JudgeSelf==0, V_up==0) %>%
gather(Question, Value, c("MorallyWrong", "CatchCovid", "TransmitCovid")) %>%
mutate(x = case_when(V_Product=="hardwaresupplies"~1,
V_Product=="babyformula"~2,
V_Product=="cigarettes"~3,
V_Product=="toiletpaper"~4),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value, x=x)) +
geom_point(aes(x=xj, color = V_Product), size = .1) +
geom_half_boxplot(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x, y = Value, color = V_Product), position = position_nudge(x = -.3), side = "l") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("hardwaresupplies", "babyformula", "cigarettes", "toiletpaper")) +
xlab("Product")+
facet_grid(EXPGRP_TEXT~Question)
grph
# 1. Open jpeg file
pdf("./mixedmodel/graphs/Model/Model01.4_product.race.pdf", width = 10, height = 10)
# 2. Create the plot
grph
# 3. Close the file
dev.off()
grph <- df_grph %>%
filter(V_JudgeSelf==1, !(is.na(V_presentation3))) %>%
mutate(x = case_when(V_presentation3graph=="Defensive"~1,
V_presentation3graph=="NONE"~2,
V_presentation3graph=="Prosocial"~3),
xj = jitter(x, amount = .09)) %>%
ggplot(aes(y=Value)) +
geom_point(aes(x=xj, color = V_presentation3graph), size = .5) +
geom_line(data = . %>%
filter(Change==0),
aes(x=xj, group=ID_Q), color = 'lightgray', alpha=.4) +
geom_line(data = . %>%
filter(Change<0),
aes(x=xj, group=ID_Q), color = 'brown4', alpha=.4) +
geom_line(data = . %>%
filter(Change>0),
aes(x=xj, group=ID_Q), color = 'darkolivegreen3', alpha=.3) +
geom_half_boxplot(aes(x=x %>% as.numeric(), y = Value, color = V_presentation3graph), position = position_nudge(x = -.25), side = "r",outlier.shape = NA, center = TRUE, errorbar.draw = FALSE, width = .2) +
geom_half_violin(aes(x=x %>% as.numeric(), y = Value, color = V_presentation3graph), position = position_nudge(x = -.3), side = "l") +
stat_smooth(data = . %>% filter(V_Presentation == "Prosocial"),
aes(x=x, y=Value), method = "lm", formula = y ~ x, geom = "smooth") +
stat_smooth(data = . %>% filter(V_Presentation == "Defensive"),
aes(x=x, y=Value), method = "lm", formula = y ~ x, geom = "smooth") +
scale_x_continuous(breaks=c(1,2,3), labels=c("Defensive", "NONE", "Prosocial")) +
xlab("Presentation") +
facet_grid(V_Product~Question)
grph
ggplot(dff_q %>%
mutate(V_JudgeSelf_=V_JudgeSelf %>% as.factor),
aes(x=CatchCovid, y=MorallyWrong, color=V_JudgeSelf_)) +
facet_wrap(~EXPGRP_TEXT) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q %>%
mutate(V_JudgeSelf_=V_JudgeSelf %>% as.factor),
aes(x=CatchCovid, y=MorallyWrong, color=V_JudgeSelf_)) +
facet_wrap(~EXPGRP_TEXT) +
geom_point() +
geom_smooth(method='lm')
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~ V_Product) +
geom_point() +
geom_smooth(method='lm')
dff_q %>%
filter(V_Product=="cigarettes") %>%
ggplot(aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~ CONTINENT_BORN_TEXT_1) +
geom_point() +
geom_smooth(method='lm')
ggplot(aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~Continent) +
geom_point() +
geom_smooth(method='lm')
dff_q %>%
filter(V_Product=="cigarettes") %>%
mutate(Continent=case_when(CONTINENT_BORN_TEXT_1=="USA"~"USA",
CONTINENT_BORN_TEXT_11="USA"~"NON-USA")) %>%
ggplot(aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~Continent) +
geom_point() +
geom_smooth(method='lm')
dff_q %>%
filter(V_Product=="cigarettes") %>%
mutate(Continent=case_when(CONTINENT_BORN_TEXT_1=="USA"~"USA",
CONTINENT_BORN_TEXT_1!="USA"~"NON-USA")) %>%
ggplot(aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
facet_grid(EXPGRP_TEXT~Continent) +
geom_point() +
geom_smooth(method='lm')
