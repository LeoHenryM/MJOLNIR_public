---
title: "vignettes"
output: html_document
date: '2022-05-19'
---

# Package

```{r}
library(tidyverse)
library(questionr)
```

# Data import

```{r setup, include=FALSE}
df <- read.csv("./data/mjolnir_clean_v7_GPS.csv")
```

# Stata Preparation

We want a database with only the data on the vignettes and the Update

```{r}
d <- df %>% dplyr::select(ID, matches("^V"))
d$ID <- seq(1:nrow(df))
```

We want to put all the vignette result under the same variable. However we have a lot of NA due to the fact that each vignettes is different according to race.

```{r}
df_V <- d %>%
  # We gather all the result of all the vignette under the same variables
  gather(vignette_name, 
         vignette_result, 
         d %>% colnames() %>% str_detect("^V[1-4].[0-9](_[A-Z]|)_Judge(Other|Self)_[0-9]$") %>% which()) %>%
  # we get rid off the NA in vignette results (which happens because there is a variable for each race name even though participants have answered according to only one race)
  filter(!(is.na(vignette_result))) %>%
  # we create variables from the name to get the vignet number, the race of the name, if it's an Update or not and what's the Question
  mutate(V_Number=vignette_name %>% str_extract("[0-9]"),
         V_Racename=vignette_name %>% str_extract("[WIBC]"),
         V_Update=vignette_name %>% str_detect("^V[0-9].2"),
         V_Question=vignette_name %>% str_extract("Judge(Other|Self)_[0-9]$"))

# We now have to complete the race name for the Update because they do not have the race of the name in the name of the variable (ex: V1.2_JudgeOther_1 and not V1.1_W_JudgeOther_1)
df_V <- df_V %>% 
  # we select the rows that do not have a Racename (typically the Updates)
  filter(is.na(V_Racename)) %>%
  # we create a unique ID for each of the four vignette based on the vignette number and the participant ID
  mutate(IDD = paste0(ID, '_', V_Number)) %>%
  dplyr::select(IDD, V_Update, V_Racename) %>%
  # we join the database of the lines without Racenames with those with race names according to the uniaue ID of the vignette, so that we have the race name for each vignette for each participants
  inner_join(df_V %>% 
               filter(!(is.na(V_Racename))) %>%
               mutate(IDD = paste0(ID, '_', V_Number)) %>%
               dplyr::select(IDD, V_Update, V_Racename),
               by="IDD") %>%
  # we gather the information and create a new unique ID for each vignette, Update and participants so that we have the race of the name according to the participants ID, Vignette number and Update or not
  gather(nu, V_Update, c(2,4)) %>%
  dplyr::select(IDD, V_Racename.y, V_Update) %>%
  mutate(IDD = paste0(IDD, "_", V_Update),
         V_Racenamef = V_Racename.y) %>%
  dplyr::select(IDD, V_Racenamef) %>%
  # we get ride of the doubloons
  distinct(IDD, V_Racenamef, .keep_all = TRUE) %>%
  # we join or database so that we always have the race of the name
  inner_join(df_V %>%
               mutate(IDD = paste0(ID, '_', V_Number, "_", V_Update)),
             by = "IDD")
```

Now we want to have for each lines a variable that indicate what was the element n  (the product, the location, the age, the store type,the framing or the presentation) for each variables
First we need to rename certain variable

```{r}
df_V <- df_V %>%
  cbind(
    df_V %>% 
      dplyr::select(matches("V[0-9]_Location"))%>%
      map_dfc(function(x){
        fct_recode(x,
             "anotherpartoftown"="in another part of town",
              "inthecity"="in the city")
      }) %>%
      rename_with(function(x){paste0("clean_",x)}),
    df_V %>% 
      dplyr::select(matches("V[0-9]_Age"))%>%
      rename_with(function(x){paste0("clean_",x)}),
    df_V %>% 
      dplyr::select(matches("V[0-9]_Product"))%>%
      map_dfc(function(x){
        fct_recode(x,
             "babyformula"="baby formula",
              "hardwaresupplies"="hardware supplies",
              "toiletpaper"="toilet paper")
      }) %>%
      rename_with(function(x){paste0("clean_",x)}),
    df_V %>% 
      dplyr::select(matches("V[0-9]_StoreType")) %>%
      map_dfc(function(x){
        fct_recode(x,
             "conveniencestore"="convenience store",
              "departmentstore"="department store",
              "supermarket"="supermarket")
      }) %>%
      rename_with(function(x){paste0("clean_",x)}),
    df_V %>% 
      dplyr::select(matches("V[0-9]_Framing")) %>%
      map_dfc(function(x){
        fct_recode(x,
             "Anticipating"="Anticipating your reaction, they explain that they are buying a large amount of",
              "Explain"="They explain to you that they are buying a large amount of",
              "Strike up"="They happen to strike up a conversation with you, explaining to you that they are buying a large amount of",
              "Wave"="They wave to you and say that they are buying a large amount of")
      }) %>%
      rename_with(function(x){paste0("clean_",x)}),
    df_V %>% 
      dplyr::select(matches("V[0-9]_Presentation")) %>%
      map_dfc(function(x){
        fct_recode(x,
              "Defensive"="even though they already have hardware supplies at home, it pays to be cautious",
              "Defensive"="even though they already have some at home, it pays to be cautious",
              "Prosocial"="their aged parents are prone to panic attacks while staying indoors and the cigarettes will keep them calm",
              "Prosocial"="their house has poor insulation and their roof is leaking, which is not safe for their family who are spending all of their time indoors",
              "Prosocial"="they are out of formula and their baby cannot eat otherwise",
              "Defensive"="they are stocking up for what they expect to be an anxiety-ridden couple of months",
              "Prosocial"="they\u0081Ere donating the toilet paper to a local homeless shelter")
      }) %>%
      rename_with(function(x){paste0("clean_",x)})
    )

```

```{r}
df_V %>%
  dplyr::select(matches("^V[.A-z0-9_]{1,}TIME")) %>%
  colnames()

df_V %>%
  dplyr::select(matches("V1.1_[A-Z]_TIME_P1_(Last|First).Click")) 
```


Now we only have to use a case_when to signal that when the vignette number is x, the element n in the variable V[x]_[n]

```{r}
df_V <- df_V %>%
  mutate(V_Product = case_when(V_Number==1 ~ clean_V1_Product,
                               V_Number==2 ~ clean_V2_Product,
                               V_Number==3 ~ clean_V3_Product,
                               V_Number==4 ~ clean_V4_Product),
         V_Location = case_when(V_Number==1 ~ clean_V1_Location,
                               V_Number==2 ~ clean_V2_Location,
                               V_Number==3 ~ clean_V3_Location,
                               V_Number==4 ~ clean_V4_Location),
         V_Age = case_when(V_Number==1 ~ clean_V1_Age,
                               V_Number==2 ~ clean_V2_Age,
                               V_Number==3 ~ clean_V3_Age,
                               V_Number==4 ~ clean_V4_Age),
         V_StoreType = case_when(V_Number==1 ~ clean_V1_StoreType,
                               V_Number==2 ~ clean_V2_StoreType,
                               V_Number==3 ~ clean_V3_StoreType,
                               V_Number==4 ~ clean_V4_StoreType),
         V_Framing = case_when(V_Number==1 ~ clean_V1_Framing,
                               V_Number==2 ~ clean_V2_Framing,
                               V_Number==3 ~ clean_V3_Framing,
                               V_Number==4 ~ clean_V4_Framing),
         V_Presentation = case_when(V_Number==1 ~ clean_V1_Presentation,
                               V_Number==2 ~ clean_V2_Presentation,
                               V_Number==3 ~ clean_V3_Presentation,
                               V_Number==4 ~ clean_V4_Presentation)
         ) 
```

We then repeat the same process to determine for each question the time people spend on the section.

```{r}
df_V <- df_V %>%
  mutate(V_FirstClick = case_when(V_Number==1 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V1.2_TIME_P1_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V1.1_W_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V1.1_I_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V1.1_B_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V1.1_C_TIME_P1_First.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V1.2_TIME_P2_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V1.1_W_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V1.1_I_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V1.1_B_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V1.1_C_TIME_P2_First.Click))),
                               V_Number==2 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V2.2_TIME_P1_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V2.1_W_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V2.1_I_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V2.1_B_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V2.1_C_TIME_P1_First.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V2.2_TIME_P2_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V2.1_W_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V2.1_I_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V2.1_B_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V2.1_C_TIME_P2_First.Click))),
                               V_Number==3 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V3.2_TIME_P1_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V3.1_W_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V3.1_I_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V3.1_B_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V3.1_C_TIME_P1_First.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V3.2_TIME_P2_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V3.1_W_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V3.1_I_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V3.1_B_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V3.1_C_TIME_P2_First.Click))),
                               V_Number==4 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V4.2_TIME_P1_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V4.1_W_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V4.1_I_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V4.1_B_TIME_P1_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V4.1_C_TIME_P1_First.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V4.2_TIME_P2_First.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V4.1_W_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "I" ~ V4.1_I_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "B" ~ V4.1_B_TIME_P2_First.Click,
                                                                                                                            V_Racenamef == "C" ~ V4.1_C_TIME_P2_First.Click)))),
        V_LastClick = case_when(V_Number==1 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V1.2_TIME_P1_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V1.1_W_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V1.1_I_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V1.1_B_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V1.1_C_TIME_P1_Last.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V1.2_TIME_P2_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V1.1_W_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V1.1_I_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V1.1_B_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V1.1_C_TIME_P2_Last.Click))),
                               V_Number==2 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V2.2_TIME_P1_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V2.1_W_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V2.1_I_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V2.1_B_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V2.1_C_TIME_P1_Last.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V2.2_TIME_P2_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V2.1_W_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V2.1_I_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V2.1_B_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V2.1_C_TIME_P2_Last.Click))),
                               V_Number==3 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V3.2_TIME_P1_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V3.1_W_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V3.1_I_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V3.1_B_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V3.1_C_TIME_P1_Last.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V3.2_TIME_P2_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V3.1_W_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V3.1_I_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V3.1_B_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V3.1_C_TIME_P2_Last.Click))),
                               V_Number==4 ~ case_when(str_detect(V_Question, "Other") ~ case_when(V_Update ~ V4.2_TIME_P1_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V4.1_W_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V4.1_I_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V4.1_B_TIME_P1_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V4.1_C_TIME_P1_Last.Click)),
                                                          str_detect(V_Question, "Self") ~ case_when(V_Update ~ V4.2_TIME_P2_Last.Click,
                                                                                                    !(V_Update) ~ case_when(V_Racenamef == "W" ~ V4.1_W_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "I" ~ V4.1_I_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "B" ~ V4.1_B_TIME_P2_Last.Click,
                                                                                                                            V_Racenamef == "C" ~ V4.1_C_TIME_P2_Last.Click)))),
        V_Timepersection = V_LastClick - V_FirstClick,
        V_Timeperquestion = V_Timepersection / 3,
        V_Timeperquestionqual = V_Timeperquestion %>% cut(c(0,1,2,3,5,10,815))
        )

df_V$V_Timeperquestionqual %>% freq()
```

We join with the rest of the data

```{r}
dff <- df %>%
  inner_join(df_V, by="ID") %>%
  filter(EXPGRP_TEXT != "Non-Chinese Asian" &
           !(CONTINENT_BORN_TEXT_1 %in% c("4Tigers and Japan", "Africa", "Middle East",
                                        "North America", "Oceania", "South America")) &
           !(is.na(CONTINENT_BORN_TEXT_1)) &
           !(SEX_TEXT %in% c("Other", "Transgender")) &
           HH_INCOME_TEXT != "$500,000 or more") 
```

### modification for amalysis

```{r}

dff$V_Location <- relevel(dff$V_Location %>% as.factor(), "nearby")
dff$V_Racenamef <- relevel(dff$V_Racenamef %>% as.factor(), "W")
dff$V_Product <- relevel(dff$V_Product %>% as.factor(), "hardwaresupplies")
dff$EXPGRP_TEXT <- relevel(dff$EXPGRP_TEXT %>% as.factor(), "White")
dff <- dff %>%
  mutate(V_up = case_when(V_Update ~ 1,
                          !(V_Update) ~ 0),
         V_presentation2 = case_when(V_Update ~ case_when(str_detect(V_Presentation, "Defensive") ~ 0,
                                                          str_detect(V_Presentation, "Prosocial") ~ 2),
                                     !(V_Update) ~ 1),
         V_presentation3 = case_when(V_Update ~ case_when(str_detect(V_Presentation, "Defensive") ~ "Defensive",
                                                          str_detect(V_Presentation, "Prosocial") ~ "Prosocial"),
                                     !(V_Update) ~ "NONE") %>%
           as.factor %>%
           relevel("NONE"),
         V_Number = V_Number %>% as.character() %>% as.numeric(),
         V_JudgeSelf = ifelse(str_detect(V_Question, "JudgeSelf"), 1, 0),
         V_Questionnb = case_when(str_detect(V_Question, "_1") ~ "CatchCovid",
                                  str_detect(V_Question, "_2") ~ "TransmitCovid",
                                  str_detect(V_Question, "_4") ~ "TransmitCovid",
                                  str_detect(V_Question, "_3") ~ "MorallyWrong",
                                  str_detect(V_Question, "_5") ~ "MorallyWrong"))

dff <- dff %>%
  mutate(V_Racename_EXPGRP_Product_Presentation = paste0(V_Racenamef, '_',
                                                         EXPGRP_TEXT, '_',
                                                         V_Product, '_',
                                                         V_Presentation) %>% 
           as.factor %>%
           relevel("W_White_hardwaresupplies_Defensive"))

dff$CONTINENT_BORN_TEXT_1 <- relevel(dff$CONTINENT_BORN_TEXT_1 %>% as.factor, "USA")
dff$DOB_AGE <- 2020-dff$DOB_YEAR
```

```{r}
dff_2 <- dff %>%
  select(-matches("^clean_V|^V[1-4].[1-2]|^covmis_|^AMBI_MSR_[0-9]{1,3}|^AMBI_[0-9]{1,3}|^AMBI_W[0-9]|^FL_172"))
```


```{r}
write.csv(dff,"./data/mjolnir_clean_v10_ReadyForVignetteAnalysis_1.csv")
write.csv(dff_2,"./data/mjolnir_clean_v10_ReadyForVignetteAnalysis_2.csv")
dff <- read.csv("./data/mjolnir_clean_v10_ReadyForVignetteAnalysis_2.csv")
```


## JudgeOther_1

```{r}
reg <- lm(vignette_result ~ V_Update, data = df_V %>%
  dplyr::select(vignette_name, vignette_result, V_Number,V_Racename,V_Update,V_Question) %>%
  filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(reg)
```



```{r}
reg <- lm(vignette_result ~ V_Update + V_Racenamef + V_Location + V_Age + V_Product + V_StoreType + V_Framing + EXPGRP_TEXT, 
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(reg)
```

```{r}
reg <- lm(vignette_result ~ V_Update + V_Racenamef + V_Location + V_Age + V_Product + V_StoreType + V_Framing + EXPGRP_TEXT, 
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(reg)
```

```{r}
reg <- lm(vignette_result ~ V_Update + V_Racenamef:EXPGRP_TEXT + V_Location + V_Age + V_Product + V_StoreType + V_Framing, 
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(reg)
```




```{r}
reg <- lm(vignette_result ~  V_Location + V_Age + V_Racenamef * EXPGRP_TEXT * V_Product * V_Presentation + V_StoreType + V_Framing, 
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1", V_Update == T))
summary(reg)
```


```{r}
dff %>% 
  filter(V_Question=="JudgeOther_1") %>%
  mutate(vn = vignette_result^car::powerTransform(vignette_result+0.000000001)$lambda) %>%
  .$vn %>%
  shapiro.test()

#dff %>% 
  filter(V_Question=="JudgeOther_1") %>%
  mutate(vn = vignette_result^car::powerTransform(vignette_result+0.000000001)$lambda) %>%
  dplyr::select(vn) %>%
  hist()

#dff %>% 
  filter(V_Question=="JudgeOther_1") %>%
  dplyr::select(vignette_result) %>%
  hist()
```

pb our data is really not normal.

## Mixed effect Model

```{r}
library(lme4)
library(lmerTest)
library(emmeans)
```


```{r}
basic.lm <- lm(vignette_result ~ V_up, 
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(basic.lm)
```

```{r}
dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1") %>%
  ggplot(aes(x=V_up, y=vignette_result)) +
  geom_point() +
  geom_smooth(method = "lm")
```


```{r}
plot(basic.lm, which = 1)
```

```{r}
plot(basic.lm, which = 2)
```

V_Location + V_Age + V_Product + V_StoreType + V_Framing
```{r}
dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1") %>%
  ggplot(aes(x=EXPGRP_TEXT, y=vignette_result, fill=EXPGRP_TEXT)) +
  ggdist::stat_halfeye(
    adjust = 0.5,
    justification=-.2,
    .width = 0,
    point_colour=NA
  ) +
  geom_boxplot(
    width=.12,
    outlier.color = NA,
    alpha=.5
  ) +
  ggdist::stat_dots(
    side="left",
    justification=1.1,
    binwidth=.25
  )
boxplot(vignette_result ~ EXPGRP_TEXT, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ CONTINENT_BORN_TEXT_1, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))

dff %>% 
  filter(V_Question=="JudgeOther_1") %>%
  ggplot(aes(x=interaction(EXPGRP_TEXT,CONTINENT_BORN_TEXT_1), y=vignette_result, fill=interaction(EXPGRP_TEXT,CONTINENT_BORN_TEXT_1))) +
  geom_boxplot()+ 
  theme(axis.text.x = element_text(angle = 45, vjust=1, hjust=1)) 


boxplot(vignette_result ~ V_Product, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ V_Location, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ V_Age, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ V_Racenamef, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ V_StoreType, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ V_Framing, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
boxplot(vignette_result ~ ID, 
        data = dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1"))
```

```{r}
d_verif <- dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1") %>%
  group_by(ID) %>%
  summarise(sdres = sd(vignette_result),
            timeres = mean(V_Timeperquestion)) %>%
  mutate(dif = sdres %>% cut(c(0, 0.0001,1,5,10,50,100), include.lowest = T),
         time = timeres %>% cut(c(0,1,2,3,5,10,815)))

table(d_verif$dif, d_verif$time) %>% lprop
```
#### model

```{r}
mixed.lmer <- lmer(vignette_result ~ V_up + (1|V_Product) + (1|V_Product:V_Presentation) + (1|ID),
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(mixed.lmer)

mixed.lmer2 <- lmer(vignette_result ~ V_Update + V_Product + V_Update:V_Product:V_presentation3 + (1|ID),
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
summary(mixed.lmer)
```


```{r}
plot(mixed.lmer)
```

```{r}
qqnorm(resid(mixed.lmer))
qqline(resid(mixed.lmer))
```


```{r}
dff %>% 
  filter(V_Number==1, V_Question=="JudgeOther_1") %>%
  ggplot(aes(x = V_up, y = vignette_result, colour = ID)) +
  facet_grid( ~ V_Product) +
  geom_point() +
  theme_classic() +
  geom_line(data = cbind(dff %>% 
                           filter(V_Number==1, V_Question=="JudgeOther_1"), 
                         pred = predict(mixed.lmer)), aes(y = pred)) +
  theme(legend.position = "none")
```


```{r}
stargazer::stargazer(mixed.lmer, type = "text")
```

```{r}
emmeans(mixed.lmer, ~ V_up + V_up:V_Product:V_presentation3)
```


```{r}
mixed.lmer <- lmer(vignette_result ~ V_presentation3 * V_Product + (1|ID),
          data = dff %>% filter(V_Number==1, V_Question=="JudgeOther_1"))
mixed.lmer %>% summary()
ls_means(mixed.lmer, ddf = c("Satterthwaite"))
```


```{r}
difflsmeans(mixed.lmer)
```


# Model on all the db

```{r}
mixed.lmer2 <- lmer(vignette_result ~ V_up + V_Product + V_Number + V_JudgeSelf + V_Questionnb + V_up:V_Product:V_presentation3 + (1|ID),
          data = dff)
summary(mixed.lmer2)
```

## Questions to each other


```{r}
dff_q <- dff %>%
  select(-vignette_name, -V_Question) %>%
  tidyr::spread(V_Questionnb, vignette_result)


```


```{r}

lm(MorallyWrong ~ CatchCovid,data = dff_q) %>% summary()
lm(TransmitCovid ~ CatchCovid,data = dff_q) %>% summary()


ggplot(dff_q,aes(CatchCovid, MorallyWrong)) +
  geom_point(color="grey") +
  geom_smooth(method='lm') +
  ggpubr::stat_regline_equation(label.y = 100, aes(label = ..eq.label..)) +
  ggpubr::stat_regline_equation(label.y = 95, aes(label = ..rr.label..))

ggplot(dff_q,aes(TransmitCovid, MorallyWrong)) +
  geom_point(color="grey") +
  geom_smooth(method='lm')+
  ggpubr::stat_regline_equation(label.y = 100, aes(label = ..eq.label..)) +
  ggpubr::stat_regline_equation(label.y = 95, aes(label = ..rr.label..))

formula <- y ~ x    
dff_q %>%
  mutate(V_Number=V_Number%>% as.factor()) %>%
  ggplot(aes(CatchCovid, TransmitCovid,  color=V_Number)) +
    geom_point(alpha=.3, cex=.1) +
    geom_smooth(method='lm')+
  ggpubr::stat_regline_equation(aes(label = ..eq.label..))
```

```{r}
mixed.lmer2 <- lmer(TransmitCovid ~ CatchCovid * V_Number + (1|ID),
          data = dff_q)
summary(mixed.lmer2)
```



```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=CONTINENT_BORN_TEXT_1)) +
  geom_point(alpha=.3, cex=.1) +
  geom_smooth(method='lm') +
    ggpubr::stat_regline_equation(aes(label = ..eq.label..)) 
```

```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=EXPGRP_TEXT)) +
  geom_point() +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=DOB_AGE_BRACKET)) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=EDUCATION_2_TEXT)) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=covmis)) +
  geom_point() +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q %>%
         mutate(CovidSkepticism_ = CovidSkepticism %>% cut(c(-1,20,40, 60 ,80))),aes(x=CatchCovid, y=MorallyWrong, color=CovidSkepticism_)) +
  geom_point() +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q %>%
         gather(BIG5_name, 
                BIG5_res,
                dff_q %>% colnames() %>% str_detect("^AMBI_BIG5_") %>% which()) %>%
         mutate(BIG5_res_ = BIG5_res %>% cut(c(-4,-1,1,4))), 
       aes(x=CatchCovid, y=MorallyWrong, color=BIG5_res_)) +
  facet_wrap(~BIG5_name, ncol = 2) +
  geom_point(size=0.1) +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q %>%
         mutate(V_JudgeSelf_=V_JudgeSelf %>% as.factor),
       aes(x=CatchCovid, y=MorallyWrong, color=V_JudgeSelf_)) +
  facet_wrap(~EXPGRP_TEXT) +
  geom_point() +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q  %>%
         mutate(V_up_=V_up %>% as.factor),
       aes(x=CatchCovid, y=MorallyWrong, color=V_up_)) +
  geom_point() +
  geom_smooth(method='lm')
```

```{r}
ggplot(dff_q  %>%
         mutate(V_up_=V_up %>% as.factor),
       aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_Racenamef)) +
  facet_wrap(~EXPGRP_TEXT) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_Product)) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q,aes(x=CatchCovid, y=MorallyWrong, color=V_presentation3)) +
  facet_wrap(~ V_Product) +
  geom_point() +
  geom_smooth(method='lm')
```


```{r}
ggplot(dff_q %>%
         mutate(V_Number_=V_Number %>% as.factor()),
       aes(x=CatchCovid, y=MorallyWrong, color=V_Number_)) +
  geom_point() +
  geom_smooth(method='lm')
```


### Mixed model with catchcovid

```{r}
mixed.lmer <- lmer(MorallyWrong ~ CONTINENT_BORN_TEXT_1 + CatchCovid + (1|ID),
          data = dff_q )
summary(mixed.lmer)
```


```{r}
mixed.lmer <- lmer(MorallyWrong ~ CatchCovid + CONTINENT_BORN_TEXT_1 + EDUCATION_2_TEXT + DOB_AGE + EXPGRP_TEXT + (1|ID),
          data = dff_q )
summary(mixed.lmer) 
```


```{r}
mixed.lmer <- lmer(MorallyWrong ~ CatchCovid + CovidSkepticism + (1|ID),
          data = dff_q )
summary(mixed.lmer) 
```


```{r}
mixed.lmer <- lmer(MorallyWrong ~ AMBI_BIG5_Neuroticism + AMBI_BIG5_Extraversion + AMBI_BIG5_Openness + AMBI_BIG5_Agreeableness + AMBI_BIG5_Conscientiousness + CatchCovid + (1|ID),
          data = dff_q )
summary(mixed.lmer) 
```


```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_Racenamef + V_Age + V_JudgeSelf + V_Location + V_Framing + V_Timeperquestion + CatchCovid*V_presentation3*V_Product*V_Number + (1|ID),
          data = dff_q )
summary(mixed.lmer) 
```

```{r}
mixed.lmer <- lmer(MorallyWrong ~ CovidSkepticism + CONTINENT_BORN_TEXT_1 + EDUCATION_2_TEXT + DOB_AGE + EXPGRP_TEXT*V_Racenamef + AMBI_BIG5_Neuroticism + AMBI_BIG5_Extraversion + AMBI_BIG5_Openness + AMBI_BIG5_Agreeableness + AMBI_BIG5_Conscientiousness + V_Age + V_JudgeSelf + V_Location + V_Framing + V_Timeperquestion + CatchCovid*V_presentation3*V_Product*V_Number + (1|ID),
          data = dff_q )
summary(mixed.lmer) 
```



```{r}
difflsmeans(mixed.lmer)
```


## Only scenario

```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_presentation3 + (1|V_JudgeSelf/ID),
          data = dff_q )
summary(mixed.lmer) 
```

```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_presentation3*V_Product + (1|V_JudgeSelf/ID),
          data = dff_q )
summary(mixed.lmer) 
```

```{r}
difflsmeans(mixed.lmer)
```

```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_Racenamef + (1|V_JudgeSelf/ID),
          data = dff_q )
summary(mixed.lmer) 
```

```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_Number + (1|V_JudgeSelf/ID),
          data = dff_q )
summary(mixed.lmer) 
```

```{r}
formula <- y ~ x    
dff_q %>%
  ggplot(aes(V_Number, MorallyWrong)) +
    geom_point(alpha=.3, cex=.5) +
    geom_smooth(method='lm', color="red")+
  ggpubr::stat_regline_equation(aes(label = ..eq.label..))

dff_q %>%
  mutate(V_Number = V_Number %>% as.factor()) %>%
  ggplot(aes(V_Number, MorallyWrong)) +
    geom_violin()+
  geom_point(alpha=.3, cex=.5) +
  ggpubr::stat_regline_equation(aes(label = ..eq.label..))

dff_q %>%
  mutate(V_Number = V_Number %>% as.factor()) %>%
  ggplot(aes(V_Number, MorallyWrong)) +
    geom_boxplot()+
  ggpubr::stat_regline_equation(aes(label = ..eq.label..))
```


```{r}
mixed.lmer <- lmer(MorallyWrong ~ V_Racenamef + V_Age + V_Location + V_Framing + V_presentation3*V_Product*V_Number + (1|V_JudgeSelf/ID),
          data = dff_q )
summary(mixed.lmer) 
```




## SEM Evolution Question Morality result with or without update

```{r}
library(lavaan)
library(semTools)
library(lavaanPlot)
library(MVN)
library(MIIVsem)
```


```{r}
dff_sem <- dff_q %>%
  mutate(V_Number = case_when(V_Number==1~"MJ_1",
                               V_Number==2~"MJ_2",
                               V_Number==3~"MJ_3",
                               V_Number==4~"MJ_4"),
         V_Update2 = case_when(V_up==1~"Update",
                               V_up==0~""),
         V_Self2 = case_when(V_JudgeSelf==1~"Self",
                               V_JudgeSelf==0~"Other"),
         V_Number_up = paste(V_Number, V_Self2, V_Update2, sep="_")) %>%
  select(V_Number_up, MorallyWrong,ResponseId) %>%
  tidyr::spread(V_Number_up, MorallyWrong)
```

```{r}
dff_sem[c(1:16),] %>%
  select(matches("^MJ_"))
```


```{r}
map(dff_sem %>% colnames, function(x){
  k <- all(dff_sem[c(1:16),x]==dff_sem[c(1),x])
  if(k %>% is.na()){k <- T}else{}
  if(k){}else{print(x)}
  })
```

```{r}

```





### without up

```{r}
model <- '
MJ_2_Self_ ~ MJ_1_Self_
MJ_3_Self_ ~ MJ_2_Self_
MJ_4_Self_ ~ MJ_3_Self_
MJ_3_Self_ ~ MJ_1_Self_
MJ_4_Self_ ~ MJ_1_Self_
MJ_4_Self_ ~ MJ_2_Self_
'
```

```{r}
fit <- cfa(model, data = dff_sem, estimator = "ML")
```

```{r}
summary(fit, fit.measures=T, standardized=T, rsquare=T) 
```

```{r}
semPlot::semPaths(fit, "std",
                  layout = "tree2",
                  rotation = 2)
```

### With Up


```{r}
model2 <- '
MJ_1_Self_Update ~ MJ_1_Self_
MJ_2_Self_ ~ MJ_1_Self_ + MJ_1_Self_Update
MJ_2_Self_Update ~ MJ_2_Self_
MJ_3_Self_ ~ MJ_2_Self_ + MJ_2_Self_Update
MJ_3_Self_Update ~ MJ_3_Self_
MJ_4_Self_ ~ MJ_3_Self_ + MJ_3_Self_Update
MJ_4_Self_Update ~ MJ_4_Self_
'
```

```{r}
fit2 <- cfa(model2, data = dff_sem, estimator = "ML")
```

```{r}
summary(fit2, fit.measures=T, standardized=T, rsquare=T) 
```

```{r}
semPlot::semPaths(fit2, "std",
                  layout = "tree2",
                  rotation=2)
```



```{r}

```


```{r}

```


```{r}

```


```{r}

```


```{r}

```





























